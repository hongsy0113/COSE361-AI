"""
        def minimax(state, action, depth, agentIndex):
            temp = 0.0
            if depth == self.depth or state.isWin() or state.isLose():
                return self.evaluationFunction(state)
            if agentIndex == 0:
                bestvalue = float("-inf")
                move = Directions.STOP
                for action in state.getLegalActions(agentIndex):
                    nextstate = state.generateSuccessor(agentIndex, action)
                    temp = minimax(state, action, depth+1, agentIndex+1)
                    if temp>bestvalue:
                        bestvalue = temp
                        move = aciton
                return bestvalue
            if agentIndex >=1:
                bestvalue = float("inf")
                if agentIndex == 2: #state.getNumAgents()-1:
                    for action in state.getLegalActions(agentIndex):
                        nextstate = state.generateSuccessor(agentIndex, action)
                        temp = minimax(state, action, depth + 1, 0)
                        if temp < bestvalue:
                            bestvalue = temp
                            move = aciton
                    agentIndex +=1
                    for action in state.getLegalActions(agentIndex):
                        nextstate = state.generateSuccessor(agentIndex, action)
                        temp = minimax(state, action, depth + 1, 0)
                        if temp < bestvalue:
                            bestvalue = temp
                            move = aciton
                    return bestvalue

        legalmoves = gameState.getLegalActions(0)
        move = Directions.STOP
        value = float("-inf")
        for action in legalmoves:
            temp = minimax(gameState, action, 0, 0)
            if (temp> value):
                value = temp
                move = action

        return move
"""